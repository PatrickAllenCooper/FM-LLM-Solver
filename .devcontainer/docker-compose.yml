version: '3.8'

services:
  development:
    build:
      context: ..
      dockerfile: Dockerfile
      target: development
    volumes:
      - ..:/workspace:cached
      - ~/.gitconfig:/root/.gitconfig:ro
      - ~/.ssh:/root/.ssh:ro
      - fm-llm-solver-data:/workspace/data
      - fm-llm-solver-models:/workspace/models
      - fm-llm-solver-cache:/workspace/.cache
      - fm-llm-solver-vscode:/workspace/.vscode-server
    environment:
      - FM_LLM_ENV=development
      - PYTHONPATH=/workspace
      - SECRET_KEY=dev-secret-key
      - DB_PASSWORD=dev-password
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"   # Web interface
      - "8000:8000"   # API server
      - "8888:8888"   # Jupyter
      - "9090:9090"   # Prometheus
    networks:
      - dev-network
    command: sleep infinity

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=fm_llm_dev
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../deployment/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --databases 16
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../deployment/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - dev-network

volumes:
  fm-llm-solver-data:
  fm-llm-solver-models:
  fm-llm-solver-cache:
  fm-llm-solver-vscode:
  postgres_dev_data:
  redis_dev_data:
  prometheus_dev_data:

networks:
  dev-network:
    driver: bridge
