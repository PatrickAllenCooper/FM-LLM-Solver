{
  "timestamp": "2025-07-09 18:44:17",
  "total_tests": 7,
  "passed_tests": 5,
  "success_rate": 0.7142857142857143,
  "total_duration": 33.13600707054138,
  "test_results": [
    {
      "name": "Certificate Validation Accuracy",
      "command": "python tests/unit/test_certificate_validation_accuracy.py",
      "success": true,
      "duration": 5.796950817108154,
      "exit_code": 0,
      "stdout": "Starting Certificate Accuracy Tests...\n==================================================\nCERTIFICATE ACCURACY REPORT\n==================================================\nTimestamp: 2025-07-09 18:43:50\nTotal Time: 5.2 seconds\n\nOVERALL ACCURACY: 100.0%\nEXCELLENT: Near-perfect accuracy achieved!\n\nCOMPONENT ACCURACIES:\n  Extraction: 100.0%\n  Validation: 100.0%\n  End-to-End: 100.0%\n\nDETAILED RESULTS:\n  Extraction Tests: 5/5 correct\n  Validation Tests: 19/19 correct\n  End-to-End Tests: 4/4 correct\n\nNear-perfect accuracy achieved!\n",
      "stderr": "INFO:__main__:Starting comprehensive accuracy tests...\nINFO:__main__:Testing certificate extraction accuracy...\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: Invalid format with no certificate...\nWARNING:utils.certificate_extraction:Rejected template expression: ax**2 + by**2 + c\nWARNING:utils.certificate_extraction:Rejected template expression: ax**2 + b\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: BARRIER_CERTIFICATE_START\nax**2 + by**2 + c\nBARRIER_CERTIFICATE_END...\nINFO:__main__:Testing certificate validation accuracy...\nINFO:__main__:Testing system: linear_stable_2d\nINFO:__main__:Testing system: linear_unstable_2d\nINFO:__main__:Testing system: nonlinear_cubic_2d\nINFO:__main__:Testing system: linear_3d\nINFO:__main__:Testing end-to-end accuracy...\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.75\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 0.3\nWARNING:utils.certificate_extraction:Rejected template expression: ax**2 + by**2 + c\nWARNING:utils.certificate_extraction:Rejected template expression: ax**2 + b\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: BARRIER_CERTIFICATE_START\nax**2 + by**2 + c\nBARRIER_CERTIFICATE_END...\nINFO:__main__:Accuracy results saved to: test_results/certificate_accuracy_results.json\n"
    },
    {
      "name": "GPU Integration Test",
      "command": "python tests/test_gpu_integration.py",
      "success": true,
      "duration": 1.9991745948791504,
      "exit_code": 0,
      "stdout": "GPU Available: NVIDIA GeForce RTX 3080\nCUDA Version: 12.1\n",
      "stderr": ""
    },
    {
      "name": "Certificate Pipeline Integration",
      "command": "python tests/test_certificate_pipeline.py",
      "success": true,
      "duration": 0.4879801273345947,
      "exit_code": 0,
      "stdout": "Testing certificate pipeline integration...\nPipeline test passed!\n",
      "stderr": ""
    },
    {
      "name": "Adaptive Test Suite",
      "command": "python tests/test_adaptive_suite.py",
      "success": true,
      "duration": 0.03436160087585449,
      "exit_code": 0,
      "stdout": "Running adaptive test suite...\nAdaptive testing framework initialized\nWould test with increasing complexity based on results\nCurrently using fixed test suite\n",
      "stderr": ""
    },
    {
      "name": "Test Runner",
      "command": "python tests/run_tests.py",
      "success": true,
      "duration": 2.432433605194092,
      "exit_code": 0,
      "stdout": "FM-LLM-Solver Test Runner\n========================================\nQuick System Check...\n  OK Configuration\n  OK Certificate Extraction\n  OK Verification Helpers\n  OK Numerical Checks\n  OK PyTorch (GPU Support)\n  GPU: NVIDIA GeForce RTX 3080\n\nTest runner completed!\n",
      "stderr": ""
    },
    {
      "name": "Edge Case Testing",
      "command": "python tests/unit/test_edge_cases.py",
      "success": false,
      "duration": 0.46598291397094727,
      "exit_code": 1,
      "stdout": "Testing edge cases...\nPASS Test 1: Empty input\nPASS Test 2: Whitespace only\nPASS Test 3: Incomplete equation\nPASS Test 4: Incomplete expression\nFAIL Test 5: Wrong exponent syntax\n   Expected: None\n   Got: x**2 + y**2\nFAIL Test 6: Missing operators\n   Expected: None\n   Got: x2 + y2 - 1\nFAIL Test 7: Wrong variables\n   Expected: None\n   Got: x**2 + z**2 - 1\nPASS Test 8: Weighted quadratic\nPASS Test 9: 3D certificate\nPASS Test 10: Multiple certificates\nPASS Test 11: Parentheses\nPASS Test 12: Scientific notation\nPASS Test 13: Unicode exponents\n\nEdge case tests: 10/13 passed\n",
      "stderr": "Empty LLM output provided to extraction function\nCould not reliably extract or validate a specific B(x) expression from LLM output via any method:    \n\n   ...\nCould not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = ...\nCould not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x**2 + ...\nCleanValidate: Candidate 'x\u00b2 + y\u00b2 - 1' (from 'x\u00b2 + y\u00b2 - 1') failed SymPy parsing: Sympify of expression 'could not parse '\u00b2'' failed, because of exception being raised:\nSyntaxError: invalid character '\u00b2' (U+00B2) (<string>, line 1)\nCould not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x\u00b2 + y\u00b2 - 1...\n"
    },
    {
      "name": "Performance Benchmarks",
      "command": "python tests/test_performance.py",
      "success": false,
      "duration": 21.91912341117859,
      "exit_code": 1,
      "stdout": "Performance Benchmark Suite\n============================================================\nBenchmarking certificate extraction...\n  Extractions: 100\n  Average time: 0.83ms\n  Std dev: 2.95ms\n  Max time: 30.06ms\n\nBenchmarking certificate validation...\n  Validations: 30\n  Average time: 362.40ms\n  Std dev: 22.69ms\n  Max time: 421.06ms\n\nBenchmarking end-to-end pipeline...\n  Pipeline runs: 30\n  Average time: 344.57ms\n  Std dev: 7.78ms\n  Max time: 358.09ms\n\n============================================================\nPerformance Summary:\n  Extraction: PASS\n  Validation: FAIL\n  End-to-End: FAIL\n\nSome performance benchmarks failed!\nPerformance optimization needed before production deployment.\n",
      "stderr": "INFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\n"
    }
  ]
}