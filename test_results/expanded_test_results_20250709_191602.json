{
  "timestamp": "2025-07-09T19:16:02.570051",
  "total_duration": 24.053078413009644,
  "passed": 9,
  "failed": 1,
  "results": [
    {
      "module": "test_production_comprehensive.py",
      "description": "Production Comprehensive Tests",
      "success": true,
      "duration": 3.312854766845703,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.11.9, pytest-8.4.1, pluggy-1.6.0 -- C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\python.exe\ncachedir: .pytest_cache\nrootdir: C:\\Users\\patri\\code\\FM-LLM-Solver\nconfigfile: pytest.ini\ncollecting ... collected 36 items\n\ntests/test_production_comprehensive.py::TestCertificateGeneration::test_continuous_time_system_generation FAILED [  2%]\ntests/test_production_comprehensive.py::TestCertificateGeneration::test_discrete_time_system_generation FAILED [  5%]\ntests/test_production_comprehensive.py::TestCertificateGeneration::test_stochastic_system_generation FAILED [  8%]\ntests/test_production_comprehensive.py::TestCertificateGeneration::test_domain_bounded_generation FAILED [ 11%]\ntests/test_production_comprehensive.py::TestCertificateGeneration::test_error_handling_invalid_system FAILED [ 13%]\ntests/test_production_comprehensive.py::TestCertificateGeneration::test_generation_timeout_handling FAILED [ 16%]\ntests/test_production_comprehensive.py::TestVerificationService::test_numerical_verification FAILED [ 19%]\ntests/test_production_comprehensive.py::TestVerificationService::test_symbolic_verification FAILED [ 22%]\ntests/test_production_comprehensive.py::TestVerificationService::test_false_positive_detection FAILED [ 25%]\ntests/test_production_comprehensive.py::TestWebInterface::test_main_interface_rendering ERROR [ 27%]\ntests/test_production_comprehensive.py::TestWebInterface::test_certificate_generation_endpoint ERROR [ 30%]\ntests/test_production_comprehensive.py::TestWebInterface::test_history_tracking ERROR [ 33%]\ntests/test_production_comprehensive.py::TestWebInterface::test_error_handling ERROR [ 36%]\ntests/test_production_comprehensive.py::TestWebInterface::test_security_headers ERROR [ 38%]\ntests/test_production_comprehensive.py::TestKnowledgeBase::test_knowledge_base_initialization FAILED [ 41%]\ntests/test_production_comprehensive.py::TestKnowledgeBase::test_document_processing FAILED [ 44%]\ntests/test_production_comprehensive.py::TestKnowledgeBase::test_text_chunking FAILED [ 47%]\ntests/test_production_comprehensive.py::TestKnowledgeBase::test_document_classification FAILED [ 50%]\ntests/test_production_comprehensive.py::TestCLITools::test_cli_import PASSED [ 52%]\ntests/test_production_comprehensive.py::TestCLITools::test_cli_help_system PASSED [ 55%]\ntests/test_production_comprehensive.py::TestCLITools::test_cli_subcommands PASSED [ 58%]\ntests/test_production_comprehensive.py::TestCLITools::test_config_validation PASSED [ 61%]\ntests/test_production_comprehensive.py::TestFineTuning::test_data_creation_modules PASSED [ 63%]\ntests/test_production_comprehensive.py::TestFineTuning::test_synthetic_data_generation PASSED [ 66%]\ntests/test_production_comprehensive.py::TestSecurity::test_input_validation FAILED [ 69%]\ntests/test_production_comprehensive.py::TestSecurity::test_output_sanitization FAILED [ 72%]\ntests/test_production_comprehensive.py::TestSecurity::test_authentication_system PASSED [ 75%]\ntests/test_production_comprehensive.py::TestPerformance::test_cache_manager FAILED [ 77%]\ntests/test_production_comprehensive.py::TestPerformance::test_async_manager FAILED [ 80%]\ntests/test_production_comprehensive.py::TestPerformance::test_memory_manager FAILED [ 83%]\ntests/test_production_comprehensive.py::TestDeployment::test_docker_files_exist PASSED [ 86%]\ntests/test_production_comprehensive.py::TestDeployment::test_kubernetes_manifests_exist PASSED [ 88%]\ntests/test_production_comprehensive.py::TestDeployment::test_github_actions_exist PASSED [ 91%]\ntests/test_production_comprehensive.py::TestDocumentation::test_main_docs_exist PASSED [ 94%]\ntests/test_production_comprehensive.py::TestDocumentation::test_docs_directory_complete PASSED [ 97%]\ntests/test_production_comprehensive.py::TestDocumentation::test_sphinx_configuration PASSED [100%]\n\n=================================== ERRORS ====================================\n______ ERROR at setup of TestWebInterface.test_main_interface_rendering _______\ntests\\test_production_comprehensive.py:298: in test_app\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n___ ERROR at setup of TestWebInterface.test_certificate_generation_endpoint ___\ntests\\test_production_comprehensive.py:298: in test_app\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n__________ ERROR at setup of TestWebInterface.test_history_tracking ___________\ntests\\test_production_comprehensive.py:298: in test_app\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n___________ ERROR at setup of TestWebInterface.test_error_handling ____________\ntests\\test_production_comprehensive.py:298: in test_app\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n__________ ERROR at setup of TestWebInterface.test_security_headers ___________\ntests\\test_production_comprehensive.py:298: in test_app\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n================================== FAILURES ===================================\n______ TestCertificateGeneration.test_continuous_time_system_generation _______\ntests\\test_production_comprehensive.py:47: in test_continuous_time_system_generation\n    generator = CertificateGenerator(mock_config_manager)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: CertificateGenerator.__init__() missing 1 required positional argument: 'model_provider'\n_______ TestCertificateGeneration.test_discrete_time_system_generation ________\ntests\\test_production_comprehensive.py:75: in test_discrete_time_system_generation\n    generator = CertificateGenerator(mock_config_manager)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: CertificateGenerator.__init__() missing 1 required positional argument: 'model_provider'\n_________ TestCertificateGeneration.test_stochastic_system_generation _________\ntests\\test_production_comprehensive.py:101: in test_stochastic_system_generation\n    generator = CertificateGenerator(mock_config_manager)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: CertificateGenerator.__init__() missing 1 required positional argument: 'model_provider'\n__________ TestCertificateGeneration.test_domain_bounded_generation ___________\ntests\\test_production_comprehensive.py:127: in test_domain_bounded_generation\n    generator = CertificateGenerator(mock_config_manager)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: CertificateGenerator.__init__() missing 1 required positional argument: 'model_provider'\n________ TestCertificateGeneration.test_error_handling_invalid_system _________\ntests\\test_production_comprehensive.py:154: in test_error_handling_invalid_system\n    generator = CertificateGenerator(mock_config_manager)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: CertificateGenerator.__init__() missing 1 required positional argument: 'model_provider'\n_________ TestCertificateGeneration.test_generation_timeout_handling __________\ntests\\test_production_comprehensive.py:170: in test_generation_timeout_handling\n    generator = CertificateGenerator(mock_config_manager)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   TypeError: CertificateGenerator.__init__() missing 1 required positional argument: 'model_provider'\n_____________ TestVerificationService.test_numerical_verification _____________\ntests\\test_production_comprehensive.py:220: in test_numerical_verification\n    with patch.object(verifier, '_verify_numerically') as mock_verify:\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1446: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <fm_llm_solver.services.verifier.CertificateVerifier object at 0x0000014D5F032110> does not have the attribute '_verify_numerically'\n_____________ TestVerificationService.test_symbolic_verification ______________\ntests\\test_production_comprehensive.py:249: in test_symbolic_verification\n    with patch.object(verifier, '_verify_symbolically') as mock_verify:\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1446: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <fm_llm_solver.services.verifier.CertificateVerifier object at 0x0000014D5EEE3CD0> does not have the attribute '_verify_symbolically'\n____________ TestVerificationService.test_false_positive_detection ____________\ntests\\test_production_comprehensive.py:277: in test_false_positive_detection\n    with patch.object(verifier, '_verify_numerically') as mock_verify:\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1446: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <fm_llm_solver.services.verifier.CertificateVerifier object at 0x0000014D5EFB75D0> does not have the attribute '_verify_numerically'\n____________ TestKnowledgeBase.test_knowledge_base_initialization _____________\ntests\\test_production_comprehensive.py:380: in test_knowledge_base_initialization\n    with patch('fm_llm_solver.services.knowledge_base.FAISS') as mock_faiss:\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1446: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <module 'fm_llm_solver.services.knowledge_base' from 'C:\\\\Users\\\\patri\\\\code\\\\FM-LLM-Solver\\\\fm_llm_solver\\\\services\\\\knowledge_base.py'> does not have the attribute 'FAISS'\n_________________ TestKnowledgeBase.test_document_processing __________________\ntests\\test_production_comprehensive.py:397: in test_document_processing\n    from knowledge_base.alternative_pdf_processor import AlternativePDFProcessor\nknowledge_base\\alternative_pdf_processor.py:8: in <module>\n    import fitz  # PyMuPDF for PDF processing\n    ^^^^^^^^^^^\nE   ModuleNotFoundError: No module named 'fitz'\n____________________ TestKnowledgeBase.test_text_chunking _____________________\ntests\\test_production_comprehensive.py:410: in test_text_chunking\n    from knowledge_base.optimized_chunker import OptimizedChunker\nE   ImportError: cannot import name 'OptimizedChunker' from 'knowledge_base.optimized_chunker' (C:\\Users\\patri\\code\\FM-LLM-Solver\\knowledge_base\\optimized_chunker.py)\n_______________ TestKnowledgeBase.test_document_classification ________________\ntests\\test_production_comprehensive.py:422: in test_document_classification\n    from knowledge_base.document_classifier import DocumentClassifier\nE   ImportError: cannot import name 'DocumentClassifier' from 'knowledge_base.document_classifier' (C:\\Users\\patri\\code\\FM-LLM-Solver\\knowledge_base\\document_classifier.py)\n_____________________ TestSecurity.test_input_validation ______________________\ntests\\test_production_comprehensive.py:523: in test_input_validation\n    from fm_llm_solver.web.utils import validate_input\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n____________________ TestSecurity.test_output_sanitization ____________________\ntests\\test_production_comprehensive.py:535: in test_output_sanitization\n    from fm_llm_solver.web.utils import sanitize_output\nfm_llm_solver\\web\\__init__.py:7: in <module>\n    from fm_llm_solver.web.app import create_app\nfm_llm_solver\\web\\app.py:13: in <module>\n    from flask_login import LoginManager\nE   ModuleNotFoundError: No module named 'flask_login'\n_____________________ TestPerformance.test_cache_manager ______________________\ntests\\test_production_comprehensive.py:569: in test_cache_manager\n    with patch.object(cache_manager, 'cache') as mock_cache:\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1446: in __enter__\n    original, local = self.get_original()\n                      ^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py:1419: in get_original\n    raise AttributeError(\nE   AttributeError: <fm_llm_solver.core.cache_manager.CacheManager object at 0x0000014D610BC110> does not have the attribute 'cache'\n---------------------------- Captured stdout call -----------------------------\n{\"timestamp\": \"2025-07-09T19:15:41.558024\", \"level\": \"WARNING\", \"logger\": \"fm_llm_solver.core.cache_manager\", \"message\": \"Failed to load cache config: Configuration loading failed: Unsupported interpolation type INFERENCE_API_URL\\n    full_key: deployment.cloud.inference_api_url\\n    object_type=dict, using defaults\", \"module\": \"cache_manager\", \"function\": \"_load_cache_config\", \"line\": 532, \"process\": 2408, \"thread\": 9284}\n{\"timestamp\": \"2025-07-09T19:15:41.558024\", \"level\": \"INFO\", \"logger\": \"fm_llm_solver.core.cache_manager\", \"message\": \"Cache manager initialized with memory backend\", \"module\": \"cache_manager\", \"function\": \"__init__\", \"line\": 511, \"process\": 2408, \"thread\": 9284}\n------------------------------ Captured log call ------------------------------\nINFO     fm_llm_solver.core.config_manager:config_manager.py:85 Configuration manager initialized for development\nINFO     fm_llm_solver.core.config_manager:config_manager.py:85 Configuration manager initialized for development\nINFO     fm_llm_solver.core.config_manager:config_manager.py:183 Loading base config from config\\config.yaml\nERROR    fm_llm_solver.core.config_manager:config_manager.py:166 Failed to load configuration: Unsupported interpolation type INFERENCE_API_URL\n    full_key: deployment.cloud.inference_api_url\n    object_type=dict\nINFO     fm_llm_solver.core.config_manager:config_manager.py:183 Loading base config from config\\config.yaml\nERROR    fm_llm_solver.core.config_manager:config_manager.py:166 Failed to load configuration: Unsupported interpolation type INFERENCE_API_URL\n    full_key: deployment.cloud.inference_api_url\n    object_type=dict\nINFO     fm_llm_solver.core.config_manager:config_manager.py:183 Loading base config from config\\config.yaml\nERROR    fm_llm_solver.core.config_manager:config_manager.py:166 Failed to load configuration: Unsupported interpolation type INFERENCE_API_URL\n    full_key: deployment.cloud.inference_api_url\n    object_type=dict\n_____________________ TestPerformance.test_async_manager ______________________\ntests\\test_production_comprehensive.py:583: in test_async_manager\n    from fm_llm_solver.core.async_manager import AsyncManager\nfm_llm_solver\\core\\async_manager.py:20: in <module>\n    from .exceptions import PerformanceError, ServiceError\nE   ImportError: cannot import name 'PerformanceError' from 'fm_llm_solver.core.exceptions' (C:\\Users\\patri\\code\\FM-LLM-Solver\\fm_llm_solver\\core\\exceptions.py)\n_____________________ TestPerformance.test_memory_manager _____________________\ntests\\test_production_comprehensive.py:590: in test_memory_manager\n    from fm_llm_solver.core.memory_manager import MemoryManager\nfm_llm_solver\\core\\memory_manager.py:21: in <module>\n    from .exceptions import MemoryError as CustomMemoryError\nE   ImportError: cannot import name 'MemoryError' from 'fm_llm_solver.core.exceptions' (C:\\Users\\patri\\code\\FM-LLM-Solver\\fm_llm_solver\\core\\exceptions.py)\n=========================== short test summary info ===========================\nFAILED tests/test_production_comprehensive.py::TestCertificateGeneration::test_continuous_time_system_generation\nFAILED tests/test_production_comprehensive.py::TestCertificateGeneration::test_discrete_time_system_generation\nFAILED tests/test_production_comprehensive.py::TestCertificateGeneration::test_stochastic_system_generation\nFAILED tests/test_production_comprehensive.py::TestCertificateGeneration::test_domain_bounded_generation\nFAILED tests/test_production_comprehensive.py::TestCertificateGeneration::test_error_handling_invalid_system\nFAILED tests/test_production_comprehensive.py::TestCertificateGeneration::test_generation_timeout_handling\nFAILED tests/test_production_comprehensive.py::TestVerificationService::test_numerical_verification\nFAILED tests/test_production_comprehensive.py::TestVerificationService::test_symbolic_verification\nFAILED tests/test_production_comprehensive.py::TestVerificationService::test_false_positive_detection\nFAILED tests/test_production_comprehensive.py::TestKnowledgeBase::test_knowledge_base_initialization\nFAILED tests/test_production_comprehensive.py::TestKnowledgeBase::test_document_processing\nFAILED tests/test_production_comprehensive.py::TestKnowledgeBase::test_text_chunking\nFAILED tests/test_production_comprehensive.py::TestKnowledgeBase::test_document_classification\nFAILED tests/test_production_comprehensive.py::TestSecurity::test_input_validation\nFAILED tests/test_production_comprehensive.py::TestSecurity::test_output_sanitization\nFAILED tests/test_production_comprehensive.py::TestPerformance::test_cache_manager\nFAILED tests/test_production_comprehensive.py::TestPerformance::test_async_manager\nFAILED tests/test_production_comprehensive.py::TestPerformance::test_memory_manager\nERROR tests/test_production_comprehensive.py::TestWebInterface::test_main_interface_rendering\nERROR tests/test_production_comprehensive.py::TestWebInterface::test_certificate_generation_endpoint\nERROR tests/test_production_comprehensive.py::TestWebInterface::test_history_tracking\nERROR tests/test_production_comprehensive.py::TestWebInterface::test_error_handling\nERROR tests/test_production_comprehensive.py::TestWebInterface::test_security_headers\n=================== 18 failed, 13 passed, 5 errors in 2.11s ===================\n",
      "stderr": ""
    },
    {
      "module": "test_certificate_pipeline.py",
      "description": "Certificate Pipeline Tests",
      "success": true,
      "duration": 0.4662301540374756,
      "stdout": "Testing certificate pipeline integration...\nPipeline test passed!\n",
      "stderr": ""
    },
    {
      "module": "test_error_handling.py",
      "description": "Error Handling Tests",
      "success": true,
      "duration": 0.9202630519866943,
      "stdout": "Error Handling Test Suite\n============================================================\n\n1. Testing Malformed Inputs...\nTesting None input...\nTesting Integer input...\n  Exception (acceptable): TypeError\nTesting List input...\nTesting Dict input...\nTesting Double operator...\n  Exception (acceptable): AssertionError\nTesting Missing operator...\n  Exception (acceptable): AssertionError\nTesting Unmatched parenthesis...\nTesting Extra parenthesis...\nTesting Undefined variable z...\n  Exception (acceptable): AssertionError\nTesting Wrong variable names...\nTesting Caret instead of **...\n  Exception (acceptable): AssertionError\nTesting Missing exponent operator...\n  Exception (acceptable): AssertionError\nTesting Undefined function...\nTesting Unicode superscript...\nTesting Unicode character...\nTesting Empty expression...\nTesting No equals sign...\nTesting No function name...\nPASS: Malformed inputs handled correctly\n\n2. Testing Validation Errors...\nTesting None dynamics...\nTesting Invalid dynamics syntax...\nTesting Invalid initial set...\nTesting Invalid certificate expression...\nPASS: Validation errors handled correctly\n\n3. Testing Extreme Values...\nTesting Very large constant...\n  Extracted: x**2 + y**2 - 1e100\nTesting Very large coefficient...\n  Extracted: 1e100*x**2 + y**2 - 1\nTesting Very small constant...\n  Extracted: x**2 + y**2 - 1e-100\nTesting Very small coefficient...\n  Extracted: 1e-100*x**2 + y**2 - 1\nTesting Zero coefficient...\nTesting Zero constant...\nTesting Negative exponent...\nTesting Fractional exponent...\nPASS: Extreme values handled correctly\n\n4. Testing Concurrent Access...\nTesting concurrent validation...\nConcurrent validation completed in 0.14s\nResults: 12, Errors: 0\nPASS: Concurrent access is thread-safe\n\nAll error handling tests passed!\n",
      "stderr": "WARNING:utils.certificate_extraction:Empty LLM output provided to extraction function\nWARNING:utils.certificate_extraction:Empty LLM output provided to extraction function\nWARNING:utils.certificate_extraction:Empty LLM output provided to extraction function\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + + y**2\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 y**2\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = (x**2 + y**2...\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x**2 + y**2)...\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + z**2 - 1\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = a**2 + b**2 - 1...\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x2 + y2 - 1\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = sqrt(x**2 + y**2) - 1...\nWARNING:utils.certificate_extraction:CleanValidate: Candidate 'x\u00b2 + y\u00b2 - 1' (from 'x\u00b2 + y\u00b2 - 1') failed SymPy parsing: Sympify of expression 'could not parse '\u00b2'' failed, because of exception being raised:\nSyntaxError: invalid character '\u00b2' (U+00B2) (<string>, line 1)\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x\u00b2 + y\u00b2 - 1...\nWARNING:utils.certificate_extraction:CleanValidate: Candidate 'x\u00b2 + y\u00b2 - 1' (from 'x\u00b2 + y\u00b2 - 1') failed SymPy parsing: Sympify of expression 'could not parse '\u00b2'' failed, because of exception being raised:\nSyntaxError: invalid character '\u00b2' (U+00B2) (<string>, line 1)\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x\u00b2 + y\u00b2 - 1...\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = ...\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y)...\nWARNING:utils.certificate_extraction:CleanValidate: Candidate '= x**2 + y**2 - 1' (from '= x**2 + y**2 - 1') failed SymPy parsing: invalid syntax (<string>, line 1)\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: = x**2 + y**2 - 1...\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1e100\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 1e100*x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1e-100\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 1e-100*x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 0*x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x**(-2) + y**2 - 1...\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: B(x,y) = x**(1/2) + y**2 - 1...\n"
    },
    {
      "module": "test_boundary_conditions.py",
      "description": "Boundary Condition Tests",
      "success": true,
      "duration": 0.9042003154754639,
      "stdout": "Boundary Condition Test Suite\n============================================================\nTesting boundary conditions...\nAt initial set boundary: PASS\nAt unsafe set boundary: PASS\nJust inside initial boundary: PASS\nJust outside initial boundary: FAIL\n  Expected: False, Got: True\nJust inside unsafe boundary: FAIL\n  Expected: False, Got: True\nJust outside unsafe boundary: PASS\nExactly between sets: PASS\nGolden ratio position: PASS\n\nTesting dimensional boundaries...\n2D certificate on 2D system: PASS\n3D certificate on 3D system: PASS\n3D certificate on 2D system: Unexpected success\n\nTesting numerical precision...\nInteger constant: Valid\nOne decimal: Valid\nTwo decimals: Valid\nNear machine epsilon: Valid\nScientific notation 10^0: Valid\nScientific with decimal: Valid\nScientific 10^-1: Valid\nJust below 1.0: Valid\nJust above 1.0: Valid\n\nTesting coefficient boundaries...\nStandard symmetric: Extracted\nScaled symmetric: Extracted\nAsymmetric x-heavy: Extracted\nAsymmetric y-heavy: Extracted\nExtreme x-heavy: Extracted\nExtreme y-heavy: Extracted\nMixed signs: Extracted (check validation)\nMixed signs reversed: Extracted (check validation)\nAll negative: Extracted (check validation)\n\nTesting safety margin boundaries...\n2.0% margin: Valid\n4.0% margin: Valid\n10.0% margin: Valid\n20.0% margin: Valid\n50.0% margin: Valid\n\nBoundary condition tests completed!\n",
      "stderr": "INFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.00\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.000000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1e0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0e0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 10e-1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 2*y**2 - 2\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + 3*y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 100*x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + 100*y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 - y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: -x**2 + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: -x**2 - y**2 - 1\n"
    },
    {
      "module": "test_integration_scenarios.py",
      "description": "Integration Scenario Tests",
      "success": true,
      "duration": 0.8471653461456299,
      "stdout": "Integration Test Scenarios\n============================================================\nTesting LLM output variations...\nOutput 1: Extracted 'system'\nOutput 2: Extracted 'x**2 + y**2 - 1.0'\nOutput 3: Extracted 'x**2 + y**2 - 0.75'\nOutput 4: Extracted 'x**2 + y**2 - 0.5 (too close to initial set)'\nOutput 5: Extracted 'x**2 + y**2 - 1.8'\nOutput 6: Extracted 'x**2 + y**2 - 1.3'\n\nExtraction success rate: 6/6\n\nTesting complete pipeline workflow...\nInvalid certificate: x**2 + v**2 - 0.05  # Too small\n  Reason: Initial set violation at (np.float64(0.27395604855596334), np.float64(-0.06112156024794768)): B=0.029\nValid certificate found: x**2 + v**2 - 0.5  # Better\nValid certificate found: x**2 + v**2 - 0.8  # Good choice\n\nFound 2 valid certificates\n\nTesting batch processing...\n\nBatch processing results:\n  sys1: VALID\n  sys2: VALID\n  sys3: VALID\n\nTotal processing time: 0.02s\nAverage time per system: 0.01s\n\nTesting error recovery...\n\nTesting Malformed certificate...\n  Unexpectedly valid\n\nTesting Invalid dynamics...\n  Validation failed: invalid syntax (<string>, line 1)\n\nTesting Missing certificate...\n  Extraction failed (expected)\n\nRecovered from 3/3 error cases\n\nTesting performance scaling...\n  n_samples=5: 0.004s\n  n_samples=10: 0.004s\n  n_samples=20: 0.004s\n  n_samples=40: 0.005s\n\nTime scaling: 1.2x for 8.0x samples\n\nAll integration tests completed successfully!\n",
      "stderr": "INFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 3: system\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nWARNING:utils.certificate_extraction:CleanValidate: Candidate ': x**2 + y**2 - 0.75' (from ': x**2 + y**2 - 0.75') failed SymPy parsing: invalid syntax (<string>, line 1)\nWARNING:utils.certificate_extraction:CleanValidate: Candidate ': x**2 + y**2 - 0.75' (from ': x**2 + y**2 - 0.75') failed SymPy parsing: invalid syntax (<string>, line 1)\nWARNING:utils.certificate_extraction:CleanValidate: Candidate 'step by step:' (from 'step by step:') failed SymPy parsing: invalid syntax (<string>, line 1)\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 0.75\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.5 (too close to initial set)\nINFO:utils.certificate_extraction:Found certificate in mathematical notation: x**2 + y**2 - 1.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from mathematical notation: x**2 + y**2 - 1.8\nINFO:utils.certificate_extraction:Found certificate in code block: x**2 + y**2 - 1.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from code block: x**2 + y**2 - 1.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + v**2 - 0.05  # Too small\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + v**2 - 0.5  # Better\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + v**2 - 0.8  # Good choice\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 - 0.4\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + + y**2 - 1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1\nWARNING:utils.certificate_extraction:Could not reliably extract or validate a specific B(x) expression from LLM output via any method: I cannot find a suitable barrier certificate...\n"
    },
    {
      "module": "test_memory_stress.py",
      "description": "Memory and Stress Tests",
      "success": true,
      "duration": 2.0005764961242676,
      "stdout": "Memory and Stress Test Suite\n============================================================\nTesting for memory leaks...\nInitial memory: 68.6 MB\n  Iteration 0: 81.9 MB\n  Iteration 10: 82.0 MB\n  Iteration 20: 82.1 MB\n  Iteration 30: 82.1 MB\n  Iteration 40: 82.2 MB\n  Iteration 50: 82.2 MB\n  Iteration 60: 82.3 MB\n  Iteration 70: 82.4 MB\n  Iteration 80: 82.4 MB\n  Iteration 90: 82.5 MB\n\nMemory growth: 0.6 MB\nGrowth rate: 0.060 MB/sample\n\nTesting large expressions...\n\nTesting Standard...\n  Extracted successfully\n  Validation: Valid\n  Memory used: 0.0 MB\n\nTesting 10 terms...\n  Extracted successfully\n  Validation: Invalid\n  Memory used: 0.0 MB\n\nTesting Deep nesting...\n  Extracted successfully\n  Validation: Valid\n  Memory used: 0.0 MB\n\nTesting Long names...\n  Extracted successfully\n  Memory used: 0.0 MB\n\nTesting concurrent stress...\nStarting 5 threads, 20 operations each...\n\nCompleted in 0.55s\nTotal operations: 100\nErrors: 0\nMemory used: 1.0 MB\nOperations/second: 183.0\n\nTesting resource limits...\n\nHigh sampling density test...\n  n_samples=10: 0.01s, 0.0 MB\n  n_samples=50: 0.00s, 0.0 MB\n  n_samples=100: 0.00s, 0.0 MB\n  n_samples=200: 0.01s, 0.0 MB\n\nTesting input size limits...\n\nTesting 100 character input...\n  Extracted in 0.001s\n\nTesting 1000 character input...\n  Extracted in 0.000s\n\nTesting 10000 character input...\n  Extracted in 0.002s\n\nTesting 100000 character input...\n  Extracted in 0.007s\n\nAll memory and stress tests completed!\n",
      "stderr": "INFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.01\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.02\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.03\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.04\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.05\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.06\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.07\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.08\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.09\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.11\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.12\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.13\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.1400000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.15\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.16\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.17\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.18\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.19\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.2\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.21\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.22\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.23\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.24\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.25\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.26\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.27\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.28\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.29\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.31\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.32\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.33\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.34\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.35\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.3599999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.37\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.38\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.3900000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.4\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.4100000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.42\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.43\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.44\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.45\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.46\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.47\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.48\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.49\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.51\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.52\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.53\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.54\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.55\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.56\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.57\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.58\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5899999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6099999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.62\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.63\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6400000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.65\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6600000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.67\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6800000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.69\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.7000000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.71\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.72\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.73\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.74\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.75\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.76\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.77\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.78\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.79\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.81\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.82\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.83\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.8399999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.85\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.8599999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.87\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.88\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.8900000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.9\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.9100000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.92\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.9300000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.94\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.9500000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.96\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.97\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.98\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.99\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 1*x**2 + 2*x**2 + 3*x**2 + 4*x**2 + 5*x**2 + 6*x**2 + 7*x**2 + 8*x**2 + 9*x**2 + 10*x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: ((((x**2 + y**2) - 0.5) + 0.5) - 0.5) + 0.5 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: very_long_variable_name_x**2 + very_long_variable_name_y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.51\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.52\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.61\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.53\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.62\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.71\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.54\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.63\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.81\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.72\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.91\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.55\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.64\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8200000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.73\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.92\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.56\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.65\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8300000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.74\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.93\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.5700000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6599999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8400000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.75\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9400000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.58\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6699999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8500000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.76\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9500000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.59\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6799999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8600000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.77\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.96\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.69\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8700000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7799999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.97\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.61\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.88\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7899999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.98\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.62\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.71\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.89\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7999999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.99\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.63\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.72\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8099999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.64\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.73\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.91\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.82\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.01\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.65\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.74\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.92\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.83\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.02\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.66\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.75\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.93\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.84\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.03\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.67\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.76\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9400000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.85\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.04\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6799999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.77\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9500000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.86\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.05\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.69\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.78\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9600000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.87\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.06\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.79\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9700000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8799999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.07\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.98\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8899999999999999\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.08\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.99\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.09\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\n"
    },
    {
      "module": "test_concurrent_processing.py",
      "description": "Concurrent Processing Tests",
      "success": true,
      "duration": 7.700284481048584,
      "stdout": "Concurrent Processing Test Suite\n============================================================\nTesting thread pool processing...\n\nSequential processing...\n\nParallel processing (threads)...\n\nSequential time: 0.21s\nParallel time: 0.11s\nSpeedup: 2.02x\n\nTesting process pool processing...\nProcessing with process pool...\nCompleted in 2.73s\nValid certificates: 10/10\n\nTesting GPU parallel validation...\nUsing GPU: NVIDIA GeForce RTX 3080\n\nProcessing 10 batches of 1000 points each...\nCPU processing...\nGPU processing...\n\nCPU time: 0.038s\nGPU time: 0.234s\nPoints processed: 10000\nThroughput: 42811 points/second\n\nTesting concurrent file operations...\nSaving 20 results concurrently...\nLoading 20 results concurrently...\n\nSave time: 0.007s\nLoad time: 0.023s\nTotal I/O operations: 40\n\nTesting for race conditions...\nTesting unsafe concurrent access...\nUnsafe final value: 104 (expected: 1000)\n\nTesting safe concurrent access...\nSafe final value: 1000 (expected: 1000)\n\nTesting certificate validation thread safety...\nCompleted 10 concurrent validations safely\n\nAll concurrent processing tests completed!\n",
      "stderr": "INFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.2000000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.4\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.7000000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.9000000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.2\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.4000000000000004\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.2000000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.4\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.7000000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.9000000000000001\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.2\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 2.4000000000000004\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.6\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.7\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.8\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 0.9\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.1\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.2000000000000002\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.3\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.4\n"
    },
    {
      "module": "test_performance.py",
      "description": "Performance Tests",
      "success": true,
      "duration": 1.2882912158966064,
      "stdout": "Performance Benchmark Suite\n============================================================\nBenchmarking certificate extraction...\n  Extractions: 100\n  Average time: 1.07ms\n  Std dev: 3.73ms\n  Max time: 37.93ms\n\nBenchmarking certificate validation...\n  Validations: 30\n  Average time: 10.30ms\n  Std dev: 25.12ms\n  Max time: 143.17ms\n\nBenchmarking end-to-end pipeline...\n  Pipeline runs: 30\n  Average time: 6.07ms\n  Std dev: 1.05ms\n  Max time: 11.27ms\n\n============================================================\nPerformance Summary:\n  Extraction: PASS\n  Validation: PASS\n  End-to-End: PASS\n\nAll performance benchmarks passed!\nThe pipeline meets performance requirements for production use.\n",
      "stderr": "INFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated certificate: x**2 + y**2 + z**2 - 2.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: 2*x**2 + 3*y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) using regex pattern 5: x**2 + y**2 - 1.0\nINFO:utils.certificate_extraction:Extracted and validated B(x) from B(x) notation: x**2 + y**2 - 1.5\nINFO:utils.certificate_extraction:Extracted and validated certificate: 2*x**2 + 2*y**2 - 3.0\n"
    },
    {
      "module": "test_gpu_integration.py",
      "description": "GPU Integration Tests",
      "success": true,
      "duration": 1.981015920639038,
      "stdout": "GPU Available: NVIDIA GeForce RTX 3080\nCUDA Version: 12.1\n",
      "stderr": ""
    },
    {
      "module": "test_security.py",
      "description": "Security Tests",
      "success": false,
      "duration": 4.6227192878723145,
      "stdout": "FM-LLM Solver Security Tests\n========================================\n",
      "stderr": "Traceback (most recent call last):\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connection.py\", line 198, in _new_conn\n    sock = connection.create_connection(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\util\\connection.py\", line 85, in create_connection\n    raise err\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\util\\connection.py\", line 73, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 787, in urlopen\n    response = self._make_request(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 493, in _make_request\n    conn.request(\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connection.py\", line 494, in request\n    self.endheaders()\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\http\\client.py\", line 1298, in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\http\\client.py\", line 1058, in _send_output\n    self.send(msg)\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\http\\client.py\", line 996, in send\n    self.connect()\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connection.py\", line 325, in connect\n    self.sock = self._new_conn()\n                ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connection.py\", line 213, in _new_conn\n    raise NewConnectionError(\nurllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x000002B9020B5750>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\adapters.py\", line 667, in send\n    resp = conn.urlopen(\n           ^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 841, in urlopen\n    retries = retries.increment(\n              ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\urllib3\\util\\retry.py\", line 519, in increment\n    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nurllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x000002B9020B5750>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\patri\\code\\FM-LLM-Solver\\tests\\test_security.py\", line 123, in main\n    response = requests.get(BASE_URL, timeout=5)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\api.py\", line 73, in get\n    return request(\"get\", url, params=params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\sessions.py\", line 589, in request\n    resp = self.send(prep, **send_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\sessions.py\", line 703, in send\n    r = adapter.send(request, **kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\requests\\adapters.py\", line 700, in send\n    raise ConnectionError(e, request=request)\nrequests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x000002B9020B5750>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\patri\\code\\FM-LLM-Solver\\tests\\test_security.py\", line 156, in <module>\n    main() \n    ^^^^^^\n  File \"C:\\Users\\patri\\code\\FM-LLM-Solver\\tests\\test_security.py\", line 126, in main\n    print(f\"\\u2717 Server is not running at {BASE_URL}\")\n  File \"C:\\Users\\patri\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\encodings\\cp1252.py\", line 19, in encode\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2717' in position 0: character maps to <undefined>\n"
    }
  ]
}