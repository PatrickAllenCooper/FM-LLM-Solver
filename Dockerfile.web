FROM python:3.13-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r fmllm && useradd -r -g fmllm fmllm

WORKDIR /app

# Copy web-specific requirements
COPY requirements/web_requirements.txt ./

# Install Python dependencies (web-only, CPU optimized)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r web_requirements.txt

# Copy application code
COPY . .

# Create necessary directories and set permissions
RUN mkdir -p /app/instance /app/logs /app/cache /app/uploads && \
    chown -R fmllm:fmllm /app

# Copy production config
COPY config/config-production.yaml /app/config/config.yaml

# Create a startup script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Initialize database if needed\n\
python -c "from web_interface.app import app; from web_interface.models import db; app.app_context().push(); db.create_all()"\n\
\n\
# Start the web application\n\
exec gunicorn \
    --bind 0.0.0.0:5000 \
    --workers 4 \
    --worker-class gevent \
    --worker-connections 1000 \
    --timeout 120 \
    --keepalive 5 \
    --preload \
    --access-logfile - \
    --error-logfile - \
    --log-level info \
    web_interface.app:app' > /app/start.sh && \
    chmod +x /app/start.sh

# Switch to non-root user
USER fmllm

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

EXPOSE 5000

# Start the web application
CMD ["/app/start.sh"]
