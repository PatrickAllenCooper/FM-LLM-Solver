# Inference/ML Only - GPU Optimized
# Container optimized for ML inference with GPU support
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04 AS base

ENV PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    CUDA_VISIBLE_DEVICES=0 \
    PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512 \
    PYTHONPATH=/app \
    FM_LLM_ENV=production

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3-pip \
    git \
    wget \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/* \
    && ln -sf /usr/bin/python3.10 /usr/bin/python

# Create non-root user
RUN groupadd -r fmllm && useradd -r -g fmllm fmllm

WORKDIR /app

# Copy and install requirements
COPY requirements/base.txt requirements/inference.txt ./
RUN pip install --no-cache-dir --upgrade pip

# Install PyTorch with CUDA support first
RUN pip install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# Install other requirements
RUN pip install --no-cache-dir -r base.txt -r inference.txt

# Copy application code
COPY . .

# Create necessary directories and set permissions
RUN mkdir -p /app/logs /app/cache /app/models && \
    chown -R fmllm:fmllm /app

# Copy entrypoint
COPY deployment/docker/docker-entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

USER fmllm
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

CMD ["/entrypoint.sh", "inference"] 