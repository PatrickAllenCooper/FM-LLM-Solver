apiVersion: v1
kind: ConfigMap
metadata:
  name: app-script
  namespace: fm-llm-solver
data:
  simple-app.py: |
    from flask import Flask, jsonify
    import os

    app = Flask(__name__)

    @app.route('/')
    def hello():
        return '''
        <html>
        <head><title>FM-LLM Solver - Hybrid Mode</title></head>
        <body style="font-family: Arial, sans-serif; margin: 40px;">
            <h1 style="color: #2196F3;">ðŸš€ FM-LLM Solver - Hybrid Mode</h1>
            <div style="background: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <h2>âœ… Web Interface Running!</h2>
                <p><strong>Status:</strong> Ready for GPU provider integration</p>
                <p><strong>Mode:</strong> Hybrid Cloud Deployment</p>
                <p><strong>External IP:</strong> Connected via GKE LoadBalancer</p>
            </div>
            <div style="background: #e8f5e8; padding: 15px; border-radius: 8px;">
                <h3>Next Steps:</h3>
                <ul>
                    <li>âœ… Web interface deployed on GCP</li>
                    <li>ðŸ”„ GPU inference integration (RunPod/Modal)</li>
                    <li>ðŸ”„ Connect web frontend to GPU backend</li>
                </ul>
            </div>
            <p><a href="/health">Health Check</a></p>
        </body>
        </html>
        '''

    @app.route('/health')
    def health():
        return jsonify({
            "status": "healthy",
            "mode": "hybrid",
            "service": "fm-llm-web-hybrid",
            "ready": True
        })

    if __name__ == '__main__':
        app.run(host='0.0.0.0', port=5000, debug=False)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fm-llm-web-hybrid-fixed
  namespace: fm-llm-solver
  labels:
    app: fm-llm-web-hybrid-fixed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fm-llm-web-hybrid-fixed
  template:
    metadata:
      labels:
        app: fm-llm-web-hybrid-fixed
    spec:
      containers:
      - name: web
        image: python:3.11-slim
        ports:
        - containerPort: 5000
        command: ["/bin/sh"]
        args: ["-c", "pip install flask && python /app/simple-app.py"]
        volumeMounts:
        - name: app-script
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: app-script
        configMap:
          name: app-script
---
apiVersion: v1
kind: Service
metadata:
  name: fm-llm-web-hybrid-fixed-service
  namespace: fm-llm-solver
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: fm-llm-web-hybrid-fixed 