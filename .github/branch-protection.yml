# Branch Protection Rules Configuration
# This file documents the required branch protection settings
# Configure these in GitHub repository settings > Branches

branch_protection_rules:
  
  # Development Branch Protection
  development:
    required_status_checks:
      strict: true
      contexts:
        - "code-quality"
        - "test-matrix (ubuntu-latest, 3.10)"
        - "security-scan"
    
    enforce_admins: false
    required_pull_request_reviews:
      required_approving_review_count: 1
      dismiss_stale_reviews: true
      require_code_owner_reviews: true
      require_last_push_approval: false
    
    restrictions: null  # Allow all users to push
    allow_force_pushes: true
    allow_deletions: false
    required_linear_history: false
    allow_fork_syncing: true
    
  # Staging Branch Protection  
  staging:
    required_status_checks:
      strict: true
      contexts:
        - "code-quality"
        - "test-matrix (ubuntu-latest, 3.10)"
        - "test-matrix (windows-latest, 3.10)"
        - "security-scan"
        - "build-and-push"
    
    enforce_admins: false
    required_pull_request_reviews:
      required_approving_review_count: 2
      dismiss_stale_reviews: true
      require_code_owner_reviews: true
      require_last_push_approval: true
    
    restrictions:
      users: []
      teams: ["developers", "qa-team"]
      apps: []
    
    allow_force_pushes: false
    allow_deletions: false
    required_linear_history: true
    allow_fork_syncing: false
    
  # Production/Main Branch Protection (Strictest)
  main:
    required_status_checks:
      strict: true
      contexts:
        - "code-quality"
        - "test-matrix (ubuntu-latest, 3.8)"
        - "test-matrix (ubuntu-latest, 3.9)" 
        - "test-matrix (ubuntu-latest, 3.10)"
        - "test-matrix (ubuntu-latest, 3.11)"
        - "test-matrix (windows-latest, 3.10)"
        - "security-scan"
        - "build-and-push"
        - "deploy-staging"  # Staging must deploy successfully first
    
    enforce_admins: true
    required_pull_request_reviews:
      required_approving_review_count: 3
      dismiss_stale_reviews: true
      require_code_owner_reviews: true
      require_last_push_approval: true
    
    restrictions:
      users: []
      teams: ["senior-developers", "devops-team", "security-team"]
      apps: ["dependabot"]
    
    allow_force_pushes: false
    allow_deletions: false
    required_linear_history: true
    allow_fork_syncing: false

# Environment Protection Rules
environment_protection:
  
  development:
    required_reviewers: []
    wait_timer: 0
    deployment_branch_policy: "all"
    
  staging:
    required_reviewers: ["qa-team"]
    wait_timer: 300  # 5 minutes
    deployment_branch_policy: "protected_branches"
    
  production:
    required_reviewers: ["senior-developers", "devops-team"]
    wait_timer: 600  # 10 minutes 
    deployment_branch_policy: "protected_branches"
    prevent_self_review: true

# Repository Rules
repository_rules:
  
  # Require signed commits for security
  require_signed_commits: true
  
  # Require up-to-date branches before merging
  require_branches_to_be_up_to_date: true
  
  # Dismiss stale reviews when new commits are pushed
  dismiss_stale_reviews: true
  
  # Require conversation resolution before merging
  require_conversation_resolution: true
  
  # Automatically delete head branches
  delete_branch_on_merge: true

# Security Settings
security_settings:
  
  # Dependabot configuration
  dependabot:
    package_ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
    
  # Secret scanning
  secret_scanning: true
  
  # Push protection for secrets
  secret_scanning_push_protection: true
  
  # Dependency scanning
  dependency_scanning: true
  
  # Code scanning (CodeQL)
  code_scanning: true
  
  # Private vulnerability reporting
  private_vulnerability_reporting: true

# Team Permissions
team_permissions:
  
  developers:
    permissions:
      - read
      - write
    branches:
      - development
      - feature/*
      
  qa-team:
    permissions:
      - read
      - write
    branches:
      - development
      - staging
      
  senior-developers:
    permissions:
      - admin
    branches:
      - development
      - staging
      - main
      
  devops-team:
    permissions:
      - admin
    branches:
      - development
      - staging 
      - main
      
  security-team:
    permissions:
      - read
      - security
    branches:
      - main 